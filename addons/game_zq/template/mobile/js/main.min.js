var LoadingUI = function(t) {
    function e() {
        t.call(this),
        this.createView()
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.createView = function() {
        this.textField = new egret.TextField,
        this.addChild(this.textField),
        this.textField.y = 300,
        this.textField.width = 480,
        this.textField.height = 100,
        this.textField.textAlign = "center"
    },
    p.setProgress = function(t, e) {
        this.textField.text = "Loading..." + t + "/" + e
    },
    e
} (egret.Sprite);
egret.registerClass(LoadingUI, "LoadingUI");
var Main = function(t) {
    function e() {
        t.call(this),
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.onAddToStage = function() {
        this.loadingView = new LoadingUI,
        this.stage.addChild(this.loadingView),
        this.stage.scaleMode='exactFit';
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.loadConfig("js/default.res.json", "")
    },
    p.onConfigComplete = function() {
        RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
        RES.loadGroup("preload")
    },
    p.onResourceLoadComplete = function(t) {
        "preload" == t.groupName && (this.stage.removeChild(this.loadingView), RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this), RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this), RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this), this.createGameScene())
    },
    p.onResourceLoadError = function(t) {
        console.warn("Group:" + t.groupName + " has failed to load"),
        this.onResourceLoadComplete(t)
    },
    p.onResourceProgress = function(t) {
        "preload" == t.groupName && this.loadingView.setProgress(t.itemsLoaded, t.itemsTotal)
    },
    p.createGameScene = function() {
        
        var t = new startScene;
        this.addChild(t)
    },
    p.createBitmapByName = function(t) {
        var e = new egret.Bitmap,
        i = RES.getRes(t);
        return e.texture = i,
        e
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(Main, "Main");
var gameScene = function(t) {
    function e() {
        t.call(this),
        this.floorArr = new Array,
        this.PropArr = new Array,
        this.kuaiArr = new Array,
        this.goldArr = new Array,
        this.speed = 200,
        this.isJump = !1,
        this.time = 0,
        this.isJianSu = !1,
        this.RotateSpeed = 1e3,
        this.xSpeedTimes = 5,
        this.timeProp = 1.2,
        this.speedDis = 0,
        null == egret.localStorage.getItem("key") ? (this.addEventListener(egret.Event.ADDED_TO_STAGE, this.Guide, this), egret.localStorage.setItem("key", "0")) : this.addEventListener(egret.Event.ADDED_TO_STAGE, this.game, this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.Guide = function() {
        var t = this.createBitmapByName("bg");
        t.x = 240,
        t.y = 400,
        t.anchorOffsetX = t.width / 2,
        t.anchorOffsetY = t.height / 2,
        this.addChild(t);
        for (var e = 0; 6 > e; e++) {
            var i = this.createBitmapByName("floor1");
            i.x = 113 * e,
            i.y = 530 + 43 * e,
            i.type = 1,
            this.addChild(i)
        }
        this.guide = this.createBitmapByName("yindao"),
        this.guide.x = 240,
        this.guide.y = 400,
        this.guide.anchorOffsetX = this.guide.width / 2,
        this.guide.anchorOffsetY = this.guide.height / 2,
        this.addChild(this.guide),
        this.cha = this.createBitmapByName("cha"),
        this.cha.x = 395,
        this.cha.y = 330,
        this.cha.anchorOffsetX = this.cha.width / 2,
        this.cha.anchorOffsetY = this.cha.height / 2,
        this.addChild(this.cha),
        this.cha.touchEnabled = !0,
        this.cha.addEventListener(egret.TouchEvent.TOUCH_END, this.Btn11, this)
    },
    p.Btn11 = function() {
        this.cha.removeEventListener(egret.TouchEvent.TOUCH_END, this.Btn11, this),
        this.removeChildren(),
        this.game()
    },
    p.game = function() {
        this.Pic(),
        this.addEventListener(egret.Event.ENTER_FRAME, this.runFloor, this),
        this.touchEnabled = !0,
        this.addEventListener(egret.TouchEvent.TOUCH_END, this.touchHandler, this)
    },
    p.Pic = function() {
        var t = this.createBitmapByName("bg");
        t.x = 240,
        t.y = 400,
        t.anchorOffsetX = t.width / 2,
        t.anchorOffsetY = t.height / 2,
        this.addChild(t);
        var e = RES.getRes("wwwFnt");
        this.goldText = new egret.BitmapText,
        this.goldText.font = e,
        this.goldText.text = "0",
        this.goldText.$setScaleX(.5),
        this.goldText.$setScaleY(.5),
        this.goldText.x = 90,
        this.goldText.y = 25,
        this.addChild(this.goldText),
        this.addChild(this.goldText),
        this.dis = new egret.TextField,
        this.dis.text = "0",
        this.dis.x = 160,
        this.dis.y = 25,
        this.dis.size = 15,
        this.addChild(this.dis);
        var i = this.createBitmapByName("shu");
        i.x = 240,
        i.y = 600,
        i.anchorOffsetX = i.width / 2,
        i.anchorOffsetY = i.height / 2,
        this.addChild(i),
        this.hero = this.createBitmapByName("hero"),
        this.hero.x = 120,
        this.hero.y = 550,
        this.hero.anchorOffsetX = this.hero.width / 2,
        this.hero.anchorOffsetY = this.hero.height / 2,
        this.addChild(this.hero),
        egret.Tween.get(this.hero, {
            loop: !0
        }).to({
            rotation: 360
        },
        this.RotateSpeed);
        for (var r = 0; 6 > r; r++) {
            var s = this.createBitmapByName("floor1");
            s.x = 113 * r,
            s.y = 530 + 43 * r,
            s.type = 1,
            this.addChild(s),
            this.floorArr.push(s)
        }
    },
    p.runFloor = function() {
        this.time += .01,
        this.dis.text = Number(this.dis.text) + 1,
        this.speedDis += 1,
        this.speedDis >= 1400 && this.speedDis <= 1401 ? (this.RotateSpeed = 200, egret.Tween.removeAllTweens(), this.hero.rotation = 0, egret.Tween.get(this.hero, {
            loop: !0
        }).to({
            rotation: 360
        },
        this.RotateSpeed), this.xSpeedTimes = 25, this.timeProp = .8 * .8 * .8 * .8) : this.speedDis >= 1e3 && this.speedDis <= 1001 ? (this.RotateSpeed = 300, egret.Tween.removeAllTweens(), this.hero.rotation = 0, egret.Tween.get(this.hero, {
            loop: !0
        }).to({
            rotation: 360
        },
        this.RotateSpeed), this.xSpeedTimes = 20, this.timeProp = .8 * .8 * .8) : this.speedDis >= 700 && this.speedDis <= 701 ? (this.RotateSpeed = 400, egret.Tween.removeAllTweens(), this.hero.rotation = 0, egret.Tween.get(this.hero, {
            loop: !0
        }).to({
            rotation: 360
        },
        this.RotateSpeed), this.xSpeedTimes = 15, this.timeProp = .8 * .8) : this.speedDis >= 400 && this.speedDis <= 401 ? (this.RotateSpeed = 550, egret.Tween.removeAllTweens(), this.hero.rotation = 0, egret.Tween.get(this.hero, {
            loop: !0
        }).to({
            rotation: 360
        },
        this.RotateSpeed), this.xSpeedTimes = 10, this.timeProp = .8) : this.speedDis >= 200 && this.speedDis <= 201 && (this.RotateSpeed = 800, egret.Tween.removeTweens(this.hero), this.hero.rotation = 0, egret.Tween.get(this.hero, {
            loop: !0
        }).to({
            rotation: 360
        },
        this.RotateSpeed), this.xSpeedTimes = 7, this.timeProp = 1);
        for (var t in this.floorArr) {
            if (this.floorArr[0].x < -113) {
                if (2 == this.floorArr[0].type) {
                    var e = this.floorArr[0].x,
                    i = this.floorArr[0].y;
                    this.removeChild(this.floorArr[0]),
                    this.floorArr[0] = null,
                    this.floorArr[0] = this.createBitmapByName("floor1"),
                    this.floorArr[0].x = e,
                    this.floorArr[0].y = i,
                    this.floorArr[0].type = 1,
                    this.addChild(this.floorArr[0])
                }
                if (this.time > this.timeProp) {
                    this.time = 0;
                    var r = 8;
                    this.speedDis >= 700 && (r = 9);
                    var s = Math.floor(Math.random() * r);
                    if (0 == s || 1 == s || 2 == s) {
                        var e = this.floorArr[0].x,
                        i = this.floorArr[0].y;
                        this.removeChild(this.floorArr[0]),
                        this.floorArr[0] = null,
                        this.floorArr[0] = this.createBitmapByName("floor2"),
                        this.floorArr[0].x = e,
                        this.floorArr[0].y = i,
                        this.floorArr[0].type = 2,
                        this.addChild(this.floorArr[0])
                    }
                    if (3 == s || 4 == s || 5 == s) {
                        var h = this.createBitmapByName("stone");
                        h.x = this.floorArr[5].x,
                        h.y = this.floorArr[5].y - 30,
                        h.type = 3,
                        this.addChild(h),
                        this.PropArr.push(h);
                        for (var o = 1; 5 > o; o++) this.swapChildren(this.floorArr[o], h);
                        for (var a = 0; 5 > a; a++) {
                            var n = this.createBitmapByName("gold");
                            n.x = this.floorArr[5].x + 452 - 50 * a,
                            n.y = this.floorArr[5].y + 172 - 50 - 20 * a,
                            this.addChild(n),
                            this.goldArr.push(n)
                        }
                    }
                    if (6 == s || 7 == s) {
                        var d = this.createBitmapByName("langan");
                        d.x = this.floorArr[5].x,
                        d.y = this.floorArr[5].y - 27,
                        d.type = 5,
                        this.addChild(d),
                        this.PropArr.push(d);
                        for (var a = 0; 5 > a; a++) {
                            var n = this.createBitmapByName("gold");
                            n.x = this.floorArr[5].x + 565 - 50 * a,
                            n.y = this.floorArr[5].y + 215 - 50 - 20 * a,
                            this.addChild(n),
                            this.goldArr.push(n)
                        }
                    }
                    if (8 == s) {
                        var l = this.createBitmapByName("jiansu");
                        l.x = this.floorArr[5].x,
                        l.y = this.floorArr[5].y,
                        l.type = 4,
                        this.addChild(l),
                        this.PropArr.push(l)
                    }
                }
                var p = this.floorArr[0],
                e = this.floorArr[5].x,
                i = this.floorArr[5].y;
                if (this.floorArr.splice(0, 1), this.floorArr.push(p), 2 == this.floorArr[5].type) {
                    var c = this.createBitmapByName("kuai");
                    c.x = e + 146.9,
                    c.y = i + 55.9,
                    this.addChild(c),
                    this.kuaiArr.push(c),
                    c.$setAlpha(0)
                }
                this.floorArr[this.floorArr.length - 1].x = e + 113,
                this.floorArr[this.floorArr.length - 1].y = i + 43
            }
            this.floorArr[t].x -= 1.13 * this.xSpeedTimes,
            this.floorArr[t].y -= .43 * this.xSpeedTimes
        }
        if (this.kuaiArr.length > 0) for (var g in this.kuaiArr) this.kuaiArr[g].x -= 1.13 * this.xSpeedTimes,
        this.kuaiArr[g].y -= .43 * this.xSpeedTimes,
        this.kuaiArr[g].x < -200 && (this.removeChild(this.kuaiArr[g]), this.kuaiArr.splice(g, 1));
        if (this.PropArr.length > 0) for (var t in this.PropArr) this.PropArr[t].x -= 1.13 * this.xSpeedTimes,
        this.PropArr[t].y -= .43 * this.xSpeedTimes,
        this.PropArr[t].x < -200 && (this.removeChild(this.PropArr[t]), this.PropArr.splice(t, 1));
        if (this.goldArr.length > 0) for (var t in this.goldArr) this.goldArr[t].x -= 1.13 * this.xSpeedTimes,
        this.goldArr[t].y -= .43 * this.xSpeedTimes,
        this.goldArr[t].x < -200 && (this.removeChild(this.goldArr[t]), this.goldArr.splice(t, 1));
        1 == this.isJump && (this.hero.y > 550 ? (this.hero.y = 550, this.isJump = !1, this.speed = 200) : (this.speed -= 10, this.hero.y = this.hero.y - .1 * this.speed));
        for (var f in this.PropArr) if (this.hitTest(this.PropArr[f], this.hero)) if (2 == this.PropArr[f].type);
        else if (3 == this.PropArr[f].type) {
            this.isJianSu = !1,
            this.removeEventListener(egret.Event.ENTER_FRAME, this.runFloor, this),
            egret.Tween.removeAllTweens(),
            Number(egret.localStorage.getItem("key")) < Number(this.dis.text) && egret.localStorage.setItem("key", this.dis.text),
            this.over();
            var m = RES.getRes("wwwFnt"),
            u = new egret.BitmapText;
            u.font = m,
            u.text = this.dis.text,
            u.x = 240,
            u.y = 400,
            this.addChild(u)
        } else 4 == this.PropArr[f].type && 0 == this.isJianSu ? (this.isJianSu = !1, this.isJianSu = !0, this.speedDis = 400) : 5 == this.PropArr[f].type && 1 == this.isJump && (this.isJianSu = !1, this.speed = 200);
        for (var v in this.kuaiArr) if (this.kuaiArr.length > 0 && this.hitTest(this.hero, this.kuaiArr[v])) {
            this.isJianSu = !1,
            this.removeEventListener(egret.Event.ENTER_FRAME, this.runFloor, this),
            this.setChildIndex(this.hero, 100);
            var E = egret.Tween.get(this.hero);
            E.to({
                x: 120,
                y: 800
            },
            1e3),
            E.call(function() {
                egret.Tween.removeAllTweens()
            },
            this),
            Number(egret.localStorage.getItem("key")) < Number(this.dis.text) && egret.localStorage.setItem("key", this.dis.text),
            this.over();
            var m = RES.getRes("wwwFnt"),
            u = new egret.BitmapText;
            u.font = m,
            u.text = this.dis.text,
            u.x = 240,
            u.y = 400,
            this.addChild(u)
        }
        for (var v in this.goldArr) this.goldArr.length > 0 && this.hitTest(this.hero, this.goldArr[v]) && (this.removeChild(this.goldArr[v]), this.goldArr.splice(v, 1), this.goldText.text = Number(this.goldText.text) + 1 + "")
    },
    p.hitTest = function(t, e) {
        return null != e ? t.hitTestPoint(e.x + 10, e.y + 10) : void 0
    },
    p.touchHandler = function(t) {
        t.type == egret.TouchEvent.TOUCH_END && (this.isJump = !0)
    },
    p.createBitmapByName = function(t) {
        var e = new egret.Bitmap,
        i = RES.getRes(t);
        return e.texture = i,
        e
    },
    p.over = function() {
        var max = parseInt($("#max").val());
        var t = this.createBitmapByName("GameOver");
        t.x = 240,
        t.y = 400,
        t.anchorOffsetX = t.width / 2,
        t.anchorOffsetY = t.height / 2,
        this.addChild(t);
        var e = RES.getRes("wwwFnt"),
        i = new egret.BitmapText;
        var current_sco=parseInt(this.dis.text);
        if(max<current_sco) max=current_sco;
        i.text = max+'',//最高分
        i.font = e,
        i.x = 240,
        i.y = 500,
        this.addChild(i);
        var r = this.createBitmapByName("again");
        r.x = 340,
        r.y = 600,
        r.anchorOffsetX = r.width / 2,
        r.anchorOffsetY = r.height / 2,
        this.addChild(r),
        r.touchEnabled = !0,
        r.addEventListener(egret.TouchEvent.TOUCH_END, this.Btn, this);
        var s = this.createBitmapByName("share");
        s.x = 140,
        s.y = 600,
        s.anchorOffsetX = s.width / 2,
        s.anchorOffsetY = s.height / 2,
        this.addChild(s),
        s.touchEnabled = !0,
        s.addEventListener(egret.TouchEvent.TOUCH_END, this.Btn1, this),
        dp_submitScore(parseInt(this.dis.text));
    },
    p.Btn = function() {
        this.removeChildren();
        var t = new e;
        this.addChild(t);
    },
    p.Btn1 = function() {
        dp_share();
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(gameScene, "gameScene");
var over = function(t) {
    function e() {
        t.call(this),
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.over, this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.over = function() {
        var t = this.createBitmapByName("GameOver");
        t.x = 240,
        t.y = 400,
        t.anchorOffsetX = t.width / 2,
        t.anchorOffsetY = t.height / 2,
        this.addChild(t);
        var e = this.createBitmapByName("again");
        e.x = 140,
        e.y = 700,
        e.anchorOffsetX = e.width / 2,
        e.anchorOffsetY = e.height / 2,
        this.addChild(e),
        e.touchEnabled = !0,
        e.addEventListener(egret.TouchEvent.TOUCH_END, this.Btn, this);
        var i = this.createBitmapByName("share");
        i.x = 340,
        i.y = 700,
        i.anchorOffsetX = i.width / 2,
        i.anchorOffsetY = i.height / 2,
        this.addChild(i),
        i.touchEnabled = !0,
        i.addEventListener(egret.TouchEvent.TOUCH_END, this.Btn1, this)
    },
    p.Btn = function() {
        console.log("again")
    },
    p.Btn1 = function() {
        console.log("share")
    },
    p.createBitmapByName = function(t) {
        var e = new egret.Bitmap,
        i = RES.getRes(t);
        return e.texture = i,
        e
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(over, "over");
var startScene = function(t) {
    function e() {
        t.call(this),
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.start, this)
    }
    __extends(e, t);
    var i = (__define, e);
    return p = i.prototype,
    p.start = function() {
        var t = this.createBitmapByName("startPic");
        t.x = 240,
        t.y = 400,
        t.anchorOffsetX = t.width / 2,
        t.anchorOffsetY = t.height / 2,
        this.addChild(t);
        var e = this.createBitmapByName("startBtn");
        e.x = 240,
        e.y = 700,
        e.anchorOffsetX = e.width / 2,
        e.anchorOffsetY = e.height / 2,
        this.addChild(e),
        e.touchEnabled = !0,
        e.addEventListener(egret.TouchEvent.TOUCH_END, this.Btn, this);
    },
    p.Btn = function() {
        this.removeChildren();
        var t = new gameScene;
        this.addChild(t)
    },
    p.createBitmapByName = function(t) {
        var e = new egret.Bitmap,
        i = RES.getRes(t);
        return e.texture = i,
        e
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(startScene, "startScene");